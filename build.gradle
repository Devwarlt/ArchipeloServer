apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

eclipse{
	project {
        linkedResource name: 'assets-shared', type: '2', location: 'PARENT-1-PROJECT_LOC/ArchipeloClient/core/assets/shared/'
        linkedResource name: 'src-shared', type: '2', location: 'PARENT-1-PROJECT_LOC/ArchipeloClient/src-shared/'
    }
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    
	compile 'com.badlogicgames.gdx:gdx-backend-headless:1.9.3'
	compile "org.java-websocket:Java-WebSocket:1.3.0"
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
	compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.46'
    compile 'org.mongodb:mongodb-driver:3.4.0'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task afterEclipseImport(description: "Post processing after project generation", group: "IDE") {
  doLast {
    def classpath = new XmlParser().parse(file(".classpath"))
    new Node(classpath, "classpathentry", [ kind: 'src', path: 'src-shared' ]);
    new Node(classpath, "classpathentry", [ kind: 'src', path: 'assets-shared' ]);
    def writer = new FileWriter(file(".classpath"))
    def printer = new XmlNodePrinter(new PrintWriter(writer))
    printer.setPreserveWhitespace(true)
    printer.print(classpath)
  }
}